{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.4.0"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3502310,"sourceType":"datasetVersion","datasetId":2107830}],"dockerImageVersionId":30749,"isInternetEnabled":true,"language":"r","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This R environment comes with many helpful analytics packages installed\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n# For example, here's a helpful package to load\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","trusted":false},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# üõçÔ∏è Retail Sales & Weather Analysis (Walmart Forecasting Project)\n\n## üìå Objective\nThis project analyzes Walmart retail sales data to explore how holidays, store types, and weather affect weekly sales. A simple linear regression model is built to forecast future sales.\n\n## üìÅ Dataset\nSource: [Walmart Store Sales Forecasting](https://www.kaggle.com/competitions/walmart-recruiting-store-sales-forecasting/data)\n\n- `train.csv`: Historical weekly sales per store and department  \n- `features.csv`: Includes weather, holidays, fuel prices, markdowns  \n- `stores.csv`: Store type and size information  \n\n## üîß Steps Performed\n1. Loaded and explored data using R (tidyverse, lubridate, ggplot2)\n2. Merged datasets and cleaned missing values\n3. Created new time features: Year, Week, IsHoliday\n4. Built a linear regression model to predict `Weekly_Sales`\n6. Visualized actual vs predicted sales and key trends\n\n## üìà Results\n- Sales increase during major holidays (Thanksgiving, Christmas)  \n- Larger stores tend to have higher average sales  \n- Temperature has minimal impact on weekly sales  \n\n## üí° Next Steps\n- Use Random Forest or XGBoost for improved accuracy  \n- Add promotional markdown data\n- Deploy a Shiny dashboard for interactive visualization  \n\n---\n\nüë©‚Äçüíª **Skills Demonstrated**:\n- Data wrangling and visualization in R  \n- Merging and analyzing multi-table datasets  \n- Building and interpreting regression models  \n- Communicating insights with visuals and summary metrics  \n","metadata":{}},{"cell_type":"code","source":"# ‚úÖ Load built-in libraries \nlibrary(readr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:28:08.949305Z","iopub.execute_input":"2025-07-24T10:28:08.952331Z","iopub.status.idle":"2025-07-24T10:28:09.869821Z","shell.execute_reply":"2025-07-24T10:28:09.867907Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Load required packages\nlibrary(readr)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Load data\ntrain <- read_csv(\"/kaggle/input/walmart-sales-forecast/train.csv\")\nfeatures <- read_csv(\"/kaggle/input/walmart-sales-forecast/features.csv\")\nstores <- read_csv(\"/kaggle/input/walmart-sales-forecast/stores.csv\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:28:54.714287Z","iopub.execute_input":"2025-07-24T10:28:54.853408Z","iopub.status.idle":"2025-07-24T10:28:55.682825Z","shell.execute_reply":"2025-07-24T10:28:55.680793Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Merge datasets into one dataframe\ndata_full <- train %>%\n  left_join(features, by = c(\"Store\", \"Date\", \"IsHoliday\")) %>%\n  left_join(stores, by = \"Store\") %>%\n  mutate(Date = ymd(Date))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:30:20.103938Z","iopub.execute_input":"2025-07-24T10:30:20.105683Z","iopub.status.idle":"2025-07-24T10:30:21.390477Z","shell.execute_reply":"2025-07-24T10:30:21.388622Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"glimpse(data_full)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:35:36.959043Z","iopub.execute_input":"2025-07-24T10:35:36.960918Z","iopub.status.idle":"2025-07-24T10:35:36.998956Z","shell.execute_reply":"2025-07-24T10:35:36.996542Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Prepare data for modeling\nmodel_data <- data_full %>%\n  filter(!is.na(Weekly_Sales)) %>%\n  mutate(\n    Year = year(Date),\n    Week = week(Date),\n    IsHoliday = as.factor(IsHoliday)\n  ) %>%\n  select(Weekly_Sales, Store, Dept, Year, Week, IsHoliday, Size, Temperature) %>%\n  na.omit()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:31:22.255537Z","iopub.execute_input":"2025-07-24T10:31:22.257505Z","iopub.status.idle":"2025-07-24T10:31:22.781437Z","shell.execute_reply":"2025-07-24T10:31:22.779483Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Build linear regression model\nlm_model <- lm(Weekly_Sales ~ Store + Dept + Year + Week + IsHoliday + Size + Temperature, data = model_data)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:32:14.778951Z","iopub.execute_input":"2025-07-24T10:32:14.780601Z","iopub.status.idle":"2025-07-24T10:32:15.105267Z","shell.execute_reply":"2025-07-24T10:32:15.102149Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Predict weekly sales using the model\nmodel_data$predicted_sales <- predict(lm_model, newdata = model_data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:38:24.883198Z","iopub.execute_input":"2025-07-24T10:38:24.884991Z","iopub.status.idle":"2025-07-24T10:38:25.011141Z","shell.execute_reply":"2025-07-24T10:38:25.007991Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Plot Actual vs Predicted Sales\nggplot(model_data, aes(x = Weekly_Sales, y = predicted_sales)) +\n  geom_point(alpha = 0.3, color = \"#2c7fb8\") +\n  geom_abline(slope = 1, intercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Actual vs Predicted Weekly Sales\",\n    x = \"Actual Sales\",\n    y = \"Predicted Sales\"\n  ) +\n  theme_minimal()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T10:34:07.597946Z","iopub.execute_input":"2025-07-24T10:34:07.599666Z","iopub.status.idle":"2025-07-24T10:34:34.136089Z","shell.execute_reply":"2025-07-24T10:34:34.133602Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Sales increase during major holidays (Thanksgiving, Christmas) \nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Created a Year and Month column\ndata_full <- data_full %>%\n  mutate(\n    Year = year(Date),\n    Month = month(Date),\n    Week = week(Date)\n  )\n\n# Average sales for holiday vs non-holiday weeks\nholiday_sales <- data_full %>%\n  group_by(IsHoliday) %>%\n  summarise(avg_sales = mean(Weekly_Sales, na.rm = TRUE))\n\nggplot(holiday_sales, aes(x = IsHoliday, y = avg_sales, fill = IsHoliday)) +\n  geom_col() +\n  labs(\n    title = \"Average Weekly Sales: Holiday vs Non-Holiday\",\n    x = \"Is Holiday\",\n    y = \"Average Weekly Sales\"\n  ) +\n  theme_minimal()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T11:36:41.170170Z","iopub.execute_input":"2025-07-24T11:36:41.172949Z","iopub.status.idle":"2025-07-24T11:36:42.078579Z","shell.execute_reply":"2025-07-24T11:36:42.076463Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"\n# Average sales by store size\nstore_size_sales <- data_full %>%\n  group_by(Store, Size) %>%\n  summarise(avg_sales = mean(Weekly_Sales, na.rm = TRUE)) %>%\n  ungroup()\n\nggplot(store_size_sales, aes(x = Size, y = avg_sales)) +\n  geom_point(alpha = 0.5, color = \"#2c7fb8\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Average Weekly Sales vs. Store Size\",\n    x = \"Store Size (sqft)\",\n    y = \"Average Weekly Sales\"\n  ) +\n  theme_minimal()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T11:38:36.883212Z","iopub.execute_input":"2025-07-24T11:38:36.885653Z","iopub.status.idle":"2025-07-24T11:38:38.658886Z","shell.execute_reply":"2025-07-24T11:38:38.656538Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Temperature has minimal impact on weekly sales \n# Plot relationship between temperature and sales\nggplot(data_full, aes(x = Temperature, y = Weekly_Sales)) +\n  geom_point(alpha = 0.3, color = \"#74c476\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"darkgreen\", linetype = \"dotted\") +\n  labs(\n    title = \"Weekly Sales vs. Temperature\",\n    x = \"Temperature (¬∞F)\",\n    y = \"Weekly Sales\"\n  ) +\n  theme_minimal()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T11:40:02.298917Z","iopub.execute_input":"2025-07-24T11:40:02.301802Z","iopub.status.idle":"2025-07-24T11:40:29.151753Z","shell.execute_reply":"2025-07-24T11:40:29.149529Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#plot weekly sales\nlibrary(ggplot2)\n\nggplot(data_full, aes(x = Date, y = Weekly_Sales)) +\n  geom_line(alpha = 0.4, color = \"#1f77b4\") +   # Smooth blue line with transparency\n  labs(\n    title = \"Weekly Sales Over Time - Walmart\",\n    x = \"Date\",\n    y = \"Weekly Sales (USD)\"\n  ) +\n  theme_minimal()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T04:12:47.783145Z","iopub.execute_input":"2025-07-24T04:12:47.784677Z","iopub.status.idle":"2025-07-24T04:13:40.878094Z","shell.execute_reply":"2025-07-24T04:13:40.876329Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# holiday vs non-holiday sales\nlibrary(ggplot2)\n\nggplot(data_full, aes(x = IsHoliday, y = Weekly_Sales, fill = IsHoliday)) +\n  geom_boxplot(alpha = 0.7) +\n  scale_x_discrete(labels = c(\"No Holiday\", \"Holiday\")) +\n  labs(\n    title = \"Comparison of Weekly Sales: Holiday vs Non-Holiday\",\n    x = \"Holiday?\",\n    y = \"Weekly Sales (USD)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Hide legend because fill matches x-axis\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T11:18:21.436063Z","iopub.execute_input":"2025-08-03T11:18:21.438418Z","iopub.status.idle":"2025-08-03T11:18:21.914896Z","shell.execute_reply":"2025-08-03T11:18:21.909523Z"}},"outputs":[{"ename":"ERROR","evalue":"Error in eval(expr, envir, enclos): object 'data_full' not found\n","traceback":["Error in eval(expr, envir, enclos): object 'data_full' not found\nTraceback:\n","1. ggplot(data_full, aes(x = IsHoliday, y = Weekly_Sales, fill = IsHoliday))"],"output_type":"error"}],"execution_count":1}]}